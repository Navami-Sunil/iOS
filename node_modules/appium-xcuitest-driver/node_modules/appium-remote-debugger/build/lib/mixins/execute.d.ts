/**
 * Execute a Selenium atom in Safari
 * @param {string} atom Name of Selenium atom (see atoms/ directory)
 * @param {any[]} args Arguments passed to the atom
 * @param {string[]} frames
 * @returns {Promise<any>} The result received from the atom
 */
export function executeAtom(atom: string, args?: any[], frames?: string[]): Promise<any>;
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @param {string} atom
 * @param {any[]} [args]
 * @param {string[]} [frames]
 * @returns {Promise<any>}
 */
export function executeAtomAsync(this: import("../remote-debugger").RemoteDebugger, atom: string, args?: any[] | undefined, frames?: string[] | undefined): Promise<any>;
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @param {string} command
 * @param {boolean} [override]
 * @returns {Promise<any>}
 */
export function execute(this: import("../remote-debugger").RemoteDebugger, command: string, override?: boolean | undefined): Promise<any>;
/**
 * @this {import('../remote-debugger').RemoteDebugger}
 * @param {string} objectId
 * @param {any} fn
 * @param {any[]} [args]
 */
export function callFunction(this: import("../remote-debugger").RemoteDebugger, objectId: string, fn: any, args?: any[] | undefined): Promise<any>;
//# sourceMappingURL=execute.d.ts.map